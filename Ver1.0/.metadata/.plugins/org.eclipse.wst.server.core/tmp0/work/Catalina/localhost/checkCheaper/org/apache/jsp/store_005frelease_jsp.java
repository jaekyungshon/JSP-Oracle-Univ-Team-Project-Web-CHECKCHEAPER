/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2023-12-11 11:50:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;
import java.sql.*;

public final class store_005frelease_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/menu.jsp", Long.valueOf(1702290992034L));
    _jspx_dependants.put("/dbConn.jsp", Long.valueOf(1701512816197L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
Connection conn = null;
try{
	String url = "jdbc:mysql://localhost:3306/testdb";
	String user = "root";
	String password = "hansung";
	
	Class.forName("com.mysql.jdbc.Driver");
	conn = DriverManager.getConnection(url, user, password);
	//System.out.println("데이터베이스 연결 성공");
} catch (SQLException ex) {
	System.out.println("데이터베이스 연결 실패");
}

      out.write('\r');
      out.write('\n');

// 로그인 아이디
String storeID = (String)session.getAttribute("userID");

// DB 설정
PreparedStatement pstmt = null;
String sql = "SELECT orderdetail.ORDERDETAIL_ID, orderdetail.ORDR_ID, goods.GDS_NM, orderdetail.ORDERDETAIL_CNT, delivery.DELIVERY_BZENT_NM, delivery.DELIVERY_NUM "
		    +"FROM inventory, orderdetail, delivery, goods "
		    +"WHERE orderdetail.ORDR_ID=delivery.ORDR_ID and orderdetail.IVT_ID=inventory.IVT_ID and inventory.GDS_ID=goods.GDS_ID and "
		    +"orderdetail.RLS_FLAG=0 and inventory.FRCS_ID=?";
ResultSet rs = null;

// DB 실행
pstmt=conn.prepareStatement(sql);
pstmt.setString(1, storeID);
rs=pstmt.executeQuery();


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>CheckCheaper</title>\r\n");
      out.write("<!-- Bootstrap CDN -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.3.min.js\" integrity=\"sha256-\r\n");
      out.write("pvPw+upLPUjgMXY0G+8O0xUf+/Im1MZjXxxgOcBQBXU=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\" integrity=\"sha384-\r\n");
      out.write("xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("integrity=\"sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct\"\r\n");
      out.write("crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/footer.css\" type=\"text/css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/dash_section_input.css\" type=\"text/css\">\r\n");
      out.write("<!-- JS Function -->\r\n");
      out.write("<script>\r\n");
      out.write("	function confirmDialog(int flag){\r\n");
      out.write("		if(flag==1){\r\n");
      out.write("			alert(\"해당 상품을 출고 수락하였습니다.\");\r\n");
      out.write("		}\r\n");
      out.write("		else{\r\n");
      out.write("			alert(\"해당 상품을 출고 거절하였습니다.\");\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');

String memberType = (String)session.getAttribute("userType");

      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"./login.jsp\">logout</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("      ");
      out.write("\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"dash.jsp?flag=0\">Home</a>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"order_history.jsp\">Past Order</a>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"#\">Book Mark</a>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"cart.jsp\">Cart</a>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("      <ul class=\"navbar-nav\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"dash.jsp?flag=0\">Home</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">즐겨찾기</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"order_history.jsp\">주문내역</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"cart.jsp\">장바구니</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");

        if(memberType.equals("store")){
        
      out.write("\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"request_goods.jsp\">상품요청</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"store_inventory.jsp\">재고관리</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"store_release.jsp\">출고관리</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("        ");

        if(memberType.equals("admin")){
        
      out.write("\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"confirm_request_goods.jsp\">상품요청확인</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("	<div class=\"jumbotron\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"display-2\"><strong>Release to your selling goods!</strong></h1>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"text-center\">\r\n");
      out.write("				");

				out.println("<h3>");
				out.println("Hello, "+storeID+"! You can release to your selling-goods.");
				out.println("</h3>");
				
      out.write("\r\n");
      out.write("				<br><br>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<hr>\r\n");
      out.write("	<section>\r\n");
      out.write("	");

	String[] nameList = {"ORDR_ID","GDS_NM","ORDERDETAIL_CNT","DELIVERY_BZENT_NM","DELIVERY_NUM"};
	
      out.write("\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<table class=\"table table-striped table-hover\" style=\"width:100%; text-align:center;\">\r\n");
      out.write("				<thead>\r\n");
      out.write("					<tr>\r\n");
      out.write("					");

					for(int i=0; i<nameList.length; i++){
					
      out.write("\r\n");
      out.write("						<th scope=\"col\">");
      out.print(nameList[i] );
      out.write("</th>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("					<th scope=\"col\">출고수락</th>\r\n");
      out.write("					<th scope=\"col\">출고거절</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody>\r\n");
      out.write("				");

				while(rs.next()){
					String orderdetail_id = rs.getString("ORDERDETAIL_ID");
				
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("				");

					for(int i=0; i<nameList.length; i++){
						String e = rs.getString(nameList[i]);
				
      out.write("\r\n");
      out.write("						<td>");
      out.print(e );
      out.write("</td>\r\n");
      out.write("				");
	
					}
				
      out.write("\r\n");
      out.write("					<td>\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-outline-success\">\r\n");
      out.write("							<a href=\"store_release_process.jsp?rlsFlag=1&ordr=");
      out.print(orderdetail_id );
      out.write("\" onclick=\"confimDialog(1)\">O</a>\r\n");
      out.write("						</button>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-outline-danger\">\r\n");
      out.write("							<a href=\"store_release_process.jsp?rlsFlag=0&ordr=");
      out.print(orderdetail_id );
      out.write("\" onclick=\"confimDialog(0)\">X</a>\r\n");
      out.write("						</button>\r\n");
      out.write("					</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");

if(rs!=null){
	rs.close();
}
if(pstmt!=null){
	pstmt.close();
}
if(conn!=null){
	conn.close();
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
