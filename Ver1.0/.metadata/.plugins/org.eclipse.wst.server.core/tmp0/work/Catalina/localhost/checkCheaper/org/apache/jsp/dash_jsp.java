/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2023-12-14 10:01:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;
import java.net.*;
import checkCheaper.Goods;
import java.sql.*;

public final class dash_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1701496442334L));
    _jspx_dependants.put("/menu.jsp", Long.valueOf(1702290992034L));
    _jspx_dependants.put("/header_section.jsp", Long.valueOf(1701541232666L));
    _jspx_dependants.put("/dbConn.jsp", Long.valueOf(1701512816197L));
    _jspx_dependants.put("/dash_section_input.jsp", Long.valueOf(1701951984591L));
    _jspx_dependants.put("/dash_section_price.jsp", Long.valueOf(1702548018909L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1701500352452L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("checkCheaper.Goods");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

session.removeAttribute("tableNum");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>CheckCheaper</title>\r\n");
      out.write("<!-- Bootstrap CDN -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.3.min.js\" integrity=\"sha256-\r\n");
      out.write("pvPw+upLPUjgMXY0G+8O0xUf+/Im1MZjXxxgOcBQBXU=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\" integrity=\"sha384-\r\n");
      out.write("xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("integrity=\"sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct\"\r\n");
      out.write("crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/footer.css\" type=\"text/css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/dash_section_input.css\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');

String memberType = (String)session.getAttribute("userType");

      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"./login.jsp\">logout</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("      ");
      out.write("\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"dash.jsp?flag=0\">Home</a>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"order_history.jsp\">Past Order</a>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"#\">Book Mark</a>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"cart.jsp\">Cart</a>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("      <ul class=\"navbar-nav\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"dash.jsp?flag=0\">Home</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">즐겨찾기</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"order_history.jsp\">주문내역</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"cart.jsp\">장바구니</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");

        if(memberType.equals("store")){
        
      out.write("\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"request_goods.jsp\">상품요청</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"store_inventory.jsp\">재고관리</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"store_release.jsp\">출고관리</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("        ");

        if(memberType.equals("admin")){
        
      out.write("\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"confirm_request_goods.jsp\">상품요청확인</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("	<div id=\"wrap\">\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("<div class=\"jumbotron\">\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h1 class=\"display-2\"><strong>Welcome to CheckCheaper</strong></h1>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"text-center\">\r\n");
      out.write("			");

			String userID = (String)session.getAttribute("userID");
			out.println("<h3>");
			out.println("Hello, "+userID+"! You can search to selling goods!");
			out.println("</h3>");
			
      out.write("\r\n");
      out.write("			<br><br>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		");
      out.write('\r');
      out.write('\n');

request.setCharacterEncoding("utf-8");
response.setCharacterEncoding("utf-8");

      out.write("\r\n");
      out.write("<section id=\"dashInputGroup\">\r\n");
      out.write("	<form action=\"dash_section_input_process.jsp\" name=\"price_select_form\" method=\"post\" id=\"dashForm\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col\" style=\"max-width:200px;\">\r\n");
      out.write("				<label for=\"area\" class=\"form-label\"><strong>지역</strong></label>\r\n");
      out.write("				<select class=\"form-select\" name=\"selectArea\" id=\"area\" aria-label=\"Default select example\">\r\n");
      out.write("				  <option selected value=\"0\">전체</option>\r\n");
      out.write("				  <option value=\"1\">서울</option>\r\n");
      out.write("				  <option value=\"2\">경기도</option>\r\n");
      out.write("				  <option value=\"3\">인천</option>\r\n");
      out.write("				  <option value=\"4\">강원도</option>\r\n");
      out.write("				  <option value=\"5\">충청도</option>\r\n");
      out.write("				  <option value=\"6\">전라도</option>\r\n");
      out.write("				  <option value=\"7\">경상도</option>\r\n");
      out.write("				  <option value=\"8\">제주도</option>\r\n");
      out.write("				</select>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col\" style=\"width:700px\">\r\n");
      out.write("				<label for=\"storetype\" class=\"form-label\"><strong>업태</strong></label>\r\n");
      out.write("				<div class=\"form-check form-check-inline\">\r\n");
      out.write("					<input class=\"form-check-input\" name=\"checkStoreType\" type=\"checkbox\" id=\"bigMarket\" value=\"0\">\r\n");
      out.write("  					<label class=\"form-check-label\" for=\"bigMarket\">대형마트</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-check form-check-inline\">\r\n");
      out.write("					<input class=\"form-check-input\" name=\"checkStoreType\" type=\"checkbox\" id=\"department\" value=\"1\">\r\n");
      out.write("  					<label class=\"form-check-label\" for=\"department\">백화점</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-check form-check-inline\">\r\n");
      out.write("					<input class=\"form-check-input\" name=\"checkStoreType\" type=\"checkbox\" id=\"superMarket\" value=\"2\">\r\n");
      out.write("  					<label class=\"form-check-label\" for=\"superMarket\">슈퍼마켓</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-check form-check-inline\">\r\n");
      out.write("					<input class=\"form-check-input\" name=\"checkStoreType\" type=\"checkbox\" id=\"convenience\" value=\"3\">\r\n");
      out.write("  					<label class=\"form-check-label\" for=\"convenience\">편의점</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-check form-check-inline\">\r\n");
      out.write("					<input class=\"form-check-input\" name=\"checkStoreType\" type=\"checkbox\" id=\"roadMarket\" value=\"4\">\r\n");
      out.write("  					<label class=\"form-check-label\" for=\"roadMarket\">전통시장</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<hr>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col\" style=\"max-width:200px;\">\r\n");
      out.write("				<label for=\"goodstype\" class=\"form-label\"><strong>품목</strong></label>\r\n");
      out.write("				<div class=\"form-check form-check-inline\">\r\n");
      out.write("				  <input class=\"form-check-input\" type=\"radio\" name=\"categoryOptions\" id=\"vegetable\" value=\"0\">\r\n");
      out.write("				  <label class=\"form-check-label\" for=\"vegetable\">채소</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-check form-check-inline\">\r\n");
      out.write("				  <input class=\"form-check-input\" type=\"radio\" name=\"categoryOptions\" id=\"fruits\" value=\"1\">\r\n");
      out.write("				  <label class=\"form-check-label\" for=\"fruits\">과일</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col\">\r\n");
      out.write("				<label for=\"goods\" class=\"form-label\"><strong>상품명</strong></label>\r\n");
      out.write("				<input type=\"text\" class=\"form-control\" name=\"goodsName\" id=\"goods\" placeholder=\"ex)사과\" aria-label=\"Goods\" style=\"width:60%;\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"container\" style=\"display:flex; justify-content:center; margin-top:20px;\">\r\n");
      out.write("			<button type=\"submit\" class=\"btn btn-outline-dark btn-lg\">조회하기</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</section>\r\n");
      out.write("<hr style=\"width:60%; margin-bottom:40px;\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		");

		boolean isInputProcessed = true;
		String flag = request.getParameter("flag");
		if(flag!=null && flag.equals("1")){
			isInputProcessed=true;
		}
		else{
			isInputProcessed=false;
		}
		if(isInputProcessed){
			
      out.write("\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
Connection conn = null;
try{
	String url = "jdbc:mysql://localhost:3306/testdb";
	String user = "root";
	String password = "hansung";
	
	Class.forName("com.mysql.jdbc.Driver");
	conn = DriverManager.getConnection(url, user, password);
	//System.out.println("데이터베이스 연결 성공");
} catch (SQLException ex) {
	System.out.println("데이터베이스 연결 실패");
}

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function addCartAlarm() {\r\n");
      out.write("	alert(\"해당 상품을 장바구니에 추가하였습니다.\");\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");

// input Option들 세션에서 가져오기
request.setCharacterEncoding("utf-8");
response.setCharacterEncoding("utf-8");
ArrayList<String> options0 = (ArrayList<String>)session.getAttribute("inputOptions0"); // 업태
ArrayList<String> options1 = (ArrayList<String>)session.getAttribute("inputOptions1"); // 품목,지점,상품명
String btnFlag = (String)session.getAttribute("btnFlag");

System.out.println("<dash_section_price 세션 get 출력>");
System.out.println("options0 개수: "+options0.size());
System.out.print("options0(업태) 내용: ");
for(String e : options0){
	if(e.equals("")){
		System.out.print("null ");
	}
	else System.out.print(e+" ");
}
System.out.println();
System.out.println("options1 개수: "+options1.size());
System.out.print("options1 내용(품목,지점,상품명): ");
for(String e : options1){
	if(e.equals("")){
		System.out.print("null ");
	}
	else System.out.print(e+" ");
}
System.out.println("");
System.out.println("===============================");

      out.write('\r');
      out.write('\n');

// DB 조건 설정.
PreparedStatement pstmt = null;
String sql = "SELECT DISTINCT * FROM inventory,goods,franchise "
		   + "WHERE goods.GDS_ID=inventory.GDS_ID and franchise.FRCS_ID=inventory.FRCS_ID ";
ResultSet rs = null;

if(!options1.get(2).equals("")) { // 상품명 기재
	sql+="and goods.GDS_NM='"+options1.get(2)+"' ";
}
if(!options1.get(0).equals("")){ // 품목 기재
	sql+="and goods.CTGRY_ID="+options1.get(0)+" ";
}
if(!options0.get(0).equals("")){ // 업태 선택 한개이상인 경우.
	for(int i=0; i<options0.size(); i++){
		if(i==0) {
			if(options0.size()-1>i) sql+="and (franchise.FRCS_TYPE="+options0.get(i)+" or ";
			else sql+="and (franchise.FRCS_TYPE="+options0.get(i)+") ";
		}
		else if(i==options0.size()-1){
			sql+="franchise.FRCS_TYPE="+options0.get(i)+") ";
		}
		else{
			sql+="franchise.FRCS_TYPE="+options0.get(i)+" or ";
		}
	}
}
if(!options1.get(1).equals("0")){ // 지점 기재: 전체 아닌 경우
	if(options1.get(1).equals("1")) sql+="and franchise.FRCS_CO_ADDR like '"+"%서울%'";
	if(options1.get(1).equals("2")) sql+="and franchise.FRCS_CO_ADDR like '"+"%경기도%'";
	if(options1.get(1).equals("3")) sql+="and franchise.FRCS_CO_ADDR like '"+"%인천%'";
	if(options1.get(1).equals("4")) sql+="and franchise.FRCS_CO_ADDR like '"+"%강원도%'";
	if(options1.get(1).equals("5")) sql+="and franchise.FRCS_CO_ADDR like '"+"%충청도%'";
	if(options1.get(1).equals("6")) sql+="and franchise.FRCS_CO_ADDR like '"+"%전라도%'";
	if(options1.get(1).equals("7")) sql+="and franchise.FRCS_CO_ADDR like '"+"%경상도%'";
	if(options1.get(1).equals("8")) sql+="and franchise.FRCS_CO_ADDR like '"+"%제주도%'";
}

System.out.println("Before: "+sql);

// 정렬 기능 추가.
if(btnFlag.equals("1")){ // 최저가순
	sql += " order by inventory.IVT_GDS_AMT";
}
else if(btnFlag.equals("2")){ // 주문량순
	sql += " order by inventory.IVT_GDS_ORDR_CNT desc";
}
else if(btnFlag.equals("3")){ // 할인가순
	// select * from inventory left outer join discount using(IVT_ID)을 합침.
	boolean whereFlag = false;
	sql = "SELECT inventory.IVT_ID,goods.GDS_NM, franchise.FRCS_NM, franchise.FRCS_CO_ADDR, inventory.IVT_GRD_LEVEL, inventory.IVT_CNT, "
		+ "inventory.IVT_GDS_AMT, discount.DSCNT_AMT FROM inventory "
		+ "INNER JOIN goods ON goods.GDS_ID=inventory.GDS_ID "
		+ "INNER JOIN franchise ON franchise.FRCS_ID=inventory.FRCS_ID "
		+ "LEFT OUTER JOIN discount ON inventory.IVT_ID=discount.IVT_ID ";
	if(!options1.get(2).equals("")) { // 상품명 기재
		if(!whereFlag) {
			sql += "WHERE ";
			whereFlag=true;
			sql+="goods.GDS_NM='"+options1.get(2)+"' ";
		}
		else{
			sql+="and goods.GDS_NM='"+options1.get(2)+"' ";
		}
	}
	if(!options1.get(0).equals("")){ // 품목 기재
		if(!whereFlag) {
			sql += "WHERE ";
			whereFlag=true;
			sql+="goods.CTGRY_ID="+options1.get(0)+" ";
		}
		else{
			sql+="and goods.CTGRY_ID="+options1.get(0)+" ";
		}
	}
	if(!options0.get(0).equals("")){ // 업태 선택 한개이상인 경우.
		for(int i=0; i<options0.size(); i++){
			if(i==0) {
				if(whereFlag){
					if(options0.size()-1>i) {sql+="and (franchise.FRCS_TYPE="+options0.get(i)+" or ";}
					else {sql+="and (franchise.FRCS_TYPE="+options0.get(i)+") ";}
				}
				else{
					sql += "WHERE ";
					whereFlag=true;
					if(options0.size()-1>i) {sql+="(franchise.FRCS_TYPE="+options0.get(i)+" or ";}
					else {sql+="(franchise.FRCS_TYPE="+options0.get(i)+") ";}
				}
			}
			else if(i==options0.size()-1){
				sql+="franchise.FRCS_TYPE="+options0.get(i)+") ";
			}
			else{
				sql+="franchise.FRCS_TYPE="+options0.get(i)+" or ";
			}
		}
	}
	sql += "order by DSCNT_AMT desc";
}
System.out.println("After: "+sql);

// DB 검색
pstmt=conn.prepareStatement(sql);
rs=pstmt.executeQuery();

String[] colList={"상품명","판매점","주소","품질", "재고수량","가격(단가)"};
String[] colListDB={"GDS_NM","FRCS_NM","FRCS_CO_ADDR","IVT_GRD_LEVEL","IVT_CNT","IVT_GDS_AMT"};

      out.write("\r\n");
      out.write("<section id=\"orderBtn\" style=\"height:100px; float:right;\">\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-outline-danger\"><a href=\"dash_arrange_process.jsp?btnFlag=1\">최저가순</a></button>\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-outline-danger\"><a href=\"dash_arrange_process.jsp?btnFlag=2\">주문량순</a></button>\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-outline-danger\"><a href=\"dash_arrange_process.jsp?btnFlag=3\">할인가순</a></button>\r\n");
      out.write("</section>\r\n");
      out.write("<section id=\"priceTable\">\r\n");
      out.write("	<table class=\"table\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th scope='col'>#</th>\r\n");
      out.write("				");

				for(int i=0; i<colList.length; i++){
					out.println("<th scope='col'>");
					out.println(colList[i]);
					out.println("</th>");
				}
				if(btnFlag.equals("3")){
					out.println("<th scope='col'>");
					out.println("할인가");
					out.println("</th>");
				}
				
      out.write("\r\n");
      out.write("				<th scope='col'>장바구니 버튼</th>\r\n");
      out.write("				<th scope='col'>주문 버튼</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody>\r\n");
      out.write("		");

		int idx=1;
		while(rs.next()){
		
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th scope=\"col\">");
      out.print(idx++ );
      out.write("</th>\r\n");
      out.write("				");

				for(int i=0; i<colListDB.length; i++){
					if(colListDB[i].equals("GDS_NM")){
						out.println("<th>");
						out.println(rs.getString(colListDB[i]));
						if(rs.getString("IVT_CNT").equals("0")){
							out.println("<span class='badge badge-danger'>품절</span>");
						}
						out.println("</th>");
					}
					else if(colListDB[i].equals("IVT_GRD_LEVEL")){
						out.println("<td>");
						int t = Integer.parseInt(rs.getString("IVT_GRD_LEVEL"));
						if(t==0){
							out.println("최상급~상급");
						}
						if(t==1){
							out.println("상급~중급");
						}
						if(t==2){
							out.println("중급~하급");
						}
						out.println("</td>");
					}
					else{
						out.println("<td>");
						out.println(rs.getString(colListDB[i]));
						out.println("</td>");
						if(i==colListDB.length-1 && btnFlag.equals("3")){ // 할인가 데이터
							String dscntAmt = rs.getString("DSCNT_AMT");
							//System.out.println("ds: "+dscntAmt+");
							out.println("<td>");
							if(dscntAmt==null){
								out.println("0");
							}
							else{
								out.println(dscntAmt);
							}
							out.println("</td>");
						}
					}
				}
				
      out.write("\r\n");
      out.write("				");

				String IVT_ID = rs.getString("IVT_ID");
				String DB_GDS_NM = rs.getString("GDS_NM");
				String DB_FRCS_NM = rs.getString("FRCS_NM");
				String DB_FRCS_CO_ADDR = rs.getString("FRCS_CO_ADDR");
				String IVT_CNT = rs.getString("IVT_CNT");
				
      out.write("\r\n");
      out.write("				<td>\r\n");
      out.write("				");

				if(IVT_CNT.equals("0")){
					out.println("<button type='button' class='btn btn-outline-primary' disabled>품절</button>");
				}
				
      out.write("\r\n");
      out.write("				");

				if(!IVT_CNT.equals("0")){
				
      out.write("\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-outline-primary\" onclick=\"addCartAlarm()\">\r\n");
      out.write("						<a href=\"cart_insert_process.jsp?IVT_ID=");
      out.print(IVT_ID);
      out.write("&cartFlag=0&GDS_NM=");
      out.print(DB_GDS_NM );
      out.write("&FRCS_NM=");
      out.print(DB_FRCS_NM );
      out.write("&FRCS_CO_ADDR=");
      out.print(DB_FRCS_CO_ADDR );
      out.write("\">장바구니 담기</a>\r\n");
      out.write("					</button>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>\r\n");
      out.write("				");

				if(IVT_CNT.equals("0")){
					out.println("<button type='button' class='btn btn-outline-primary' disabled>주문하기</button>");
				}
				
      out.write("\r\n");
      out.write("				");

				if(!IVT_CNT.equals("0")){
				
      out.write("\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-outline-primary\">\r\n");
      out.write("						<a href=\"cart_insert_process.jsp?IVT_ID=");
      out.print(IVT_ID);
      out.write("&cartFlag=1&GDS_NM=");
      out.print(DB_GDS_NM );
      out.write("&FRCS_NM=");
      out.print(DB_FRCS_NM );
      out.write("&FRCS_CO_ADDR=");
      out.print(DB_FRCS_CO_ADDR );
      out.write("\">주문하기</a>\r\n");
      out.write("					</button>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			if(idx==300){
				break;
			}
			
      out.write("\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("		</tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("</section>\r\n");
 
if(rs!=null){
	rs.close();
}
if(pstmt!=null){
	pstmt.close();
}
if(conn!=null){
	conn.close();
}

      out.write("\r\n");
      out.write("			");

		}
		
      out.write("\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<footer class=\"container\">\r\n");
      out.write("	<p>\r\n");
      out.write("		<span>Agency: Hansung University DataBase Team-B</span><br>\r\n");
      out.write("		<span>Admin: 7조</span><br>\r\n");
      out.write("		<span>&copy;Copyright 2023. CheckCheaper. All Rights Reserved.</span>\r\n");
      out.write("	</p>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');

	String userid=(String)session.getAttribute("userID");
	String usertype=(String)session.getAttribute("userType");
	System.out.println(userid+" "+usertype);
	System.out.println("==================================");
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
